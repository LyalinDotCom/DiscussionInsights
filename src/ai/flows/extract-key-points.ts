// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Extracts key discussion points and takeaways from a given conversation, including relevant quotes.
 *
 * - extractKeyPoints - A function that extracts key points from the conversation.
 * - ExtractKeyPointsInput - The input type for the extractKeyPoints function.
 * - ExtractKeyPointsOutput - The return type for the extractKeyPoints function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ExtractKeyPointsInputSchema = z.object({
  conversation: z
    .string()
    .describe('The entire conversation text from which key points need to be extracted.'),
});
export type ExtractKeyPointsInput = z.infer<typeof ExtractKeyPointsInputSchema>;

const ExtractKeyPointsOutputSchema = z.object({
  keyPoints: z
    .array(z.string())
    .describe('A list of concise key discussion points and takeaways from the conversation.'),
  quotes: z
    .array(z.string())
    .describe('A list of relevant direct quotes from the conversation that highlight or exemplify the key discussion points.'),
});
export type ExtractKeyPointsOutput = z.infer<typeof ExtractKeyPointsOutputSchema>;

export async function extractKeyPoints(input: ExtractKeyPointsInput): Promise<ExtractKeyPointsOutput> {
  return extractKeyPointsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'extractKeyPointsPrompt',
  input: {schema: ExtractKeyPointsInputSchema},
  output: {schema: ExtractKeyPointsOutputSchema},
  prompt: `You are an expert in conversation analysis. Your task is to analyze the following conversation and perform two actions:
1. Extract the key discussion points and takeaways. These should be concise summaries of the main topics, arguments, or conclusions.
2. Identify and extract relevant direct quotes from the conversation that highlight, exemplify, or support these key discussion points.

Conversation to analyze:
{{{conversation}}}

Please ensure your output is a JSON object. The JSON object must adhere to the specified output schema.
It should contain a 'keyPoints' array of strings (for the discussion points) and a 'quotes' array of strings (for the direct quotes).
If, after careful analysis, no specific key discussion points can be identified, return an empty array for 'keyPoints'.
If no relevant direct quotes can be found to support the key points (or if no key points are found), return an empty array for 'quotes'.
Focus on extracting meaningful and representative information from the conversation.`,
});

const extractKeyPointsFlow = ai.defineFlow(
  {
    name: 'extractKeyPointsFlow',
    inputSchema: ExtractKeyPointsInputSchema,
    outputSchema: ExtractKeyPointsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    // Ensure that even if the LLM returns null for arrays, we default to empty arrays
    // to match the schema and prevent downstream errors.
    return {
        keyPoints: output?.keyPoints || [],
        quotes: output?.quotes || [],
    };
  }
);

